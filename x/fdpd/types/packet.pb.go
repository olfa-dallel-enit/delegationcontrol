// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: fdpd/packet.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type FdpdPacketData struct {
	// Types that are valid to be assigned to Packet:
	//	*FdpdPacketData_NoData
	//	*FdpdPacketData_RequestDelegationPacket
	//	*FdpdPacketData_EstablishCooperationPacket
	Packet isFdpdPacketData_Packet `protobuf_oneof:"packet"`
}

func (m *FdpdPacketData) Reset()         { *m = FdpdPacketData{} }
func (m *FdpdPacketData) String() string { return proto.CompactTextString(m) }
func (*FdpdPacketData) ProtoMessage()    {}
func (*FdpdPacketData) Descriptor() ([]byte, []int) {
	return fileDescriptor_2796c1a2923b5b8e, []int{0}
}
func (m *FdpdPacketData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FdpdPacketData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FdpdPacketData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FdpdPacketData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FdpdPacketData.Merge(m, src)
}
func (m *FdpdPacketData) XXX_Size() int {
	return m.Size()
}
func (m *FdpdPacketData) XXX_DiscardUnknown() {
	xxx_messageInfo_FdpdPacketData.DiscardUnknown(m)
}

var xxx_messageInfo_FdpdPacketData proto.InternalMessageInfo

type isFdpdPacketData_Packet interface {
	isFdpdPacketData_Packet()
	MarshalTo([]byte) (int, error)
	Size() int
}

type FdpdPacketData_NoData struct {
	NoData *NoData `protobuf:"bytes,1,opt,name=noData,proto3,oneof" json:"noData,omitempty"`
}
type FdpdPacketData_RequestDelegationPacket struct {
	RequestDelegationPacket *RequestDelegationPacketData `protobuf:"bytes,3,opt,name=requestDelegationPacket,proto3,oneof" json:"requestDelegationPacket,omitempty"`
}
type FdpdPacketData_EstablishCooperationPacket struct {
	EstablishCooperationPacket *EstablishCooperationPacketData `protobuf:"bytes,2,opt,name=establishCooperationPacket,proto3,oneof" json:"establishCooperationPacket,omitempty"`
}

func (*FdpdPacketData_NoData) isFdpdPacketData_Packet()                     {}
func (*FdpdPacketData_RequestDelegationPacket) isFdpdPacketData_Packet()    {}
func (*FdpdPacketData_EstablishCooperationPacket) isFdpdPacketData_Packet() {}

func (m *FdpdPacketData) GetPacket() isFdpdPacketData_Packet {
	if m != nil {
		return m.Packet
	}
	return nil
}

func (m *FdpdPacketData) GetNoData() *NoData {
	if x, ok := m.GetPacket().(*FdpdPacketData_NoData); ok {
		return x.NoData
	}
	return nil
}

func (m *FdpdPacketData) GetRequestDelegationPacket() *RequestDelegationPacketData {
	if x, ok := m.GetPacket().(*FdpdPacketData_RequestDelegationPacket); ok {
		return x.RequestDelegationPacket
	}
	return nil
}

func (m *FdpdPacketData) GetEstablishCooperationPacket() *EstablishCooperationPacketData {
	if x, ok := m.GetPacket().(*FdpdPacketData_EstablishCooperationPacket); ok {
		return x.EstablishCooperationPacket
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FdpdPacketData) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FdpdPacketData_NoData)(nil),
		(*FdpdPacketData_RequestDelegationPacket)(nil),
		(*FdpdPacketData_EstablishCooperationPacket)(nil),
	}
}

type NoData struct {
}

func (m *NoData) Reset()         { *m = NoData{} }
func (m *NoData) String() string { return proto.CompactTextString(m) }
func (*NoData) ProtoMessage()    {}
func (*NoData) Descriptor() ([]byte, []int) {
	return fileDescriptor_2796c1a2923b5b8e, []int{1}
}
func (m *NoData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NoData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NoData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NoData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoData.Merge(m, src)
}
func (m *NoData) XXX_Size() int {
	return m.Size()
}
func (m *NoData) XXX_DiscardUnknown() {
	xxx_messageInfo_NoData.DiscardUnknown(m)
}

var xxx_messageInfo_NoData proto.InternalMessageInfo

// EstablishCooperationPacketData defines a struct for the packet payload
type EstablishCooperationPacketData struct {
	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Sender   string `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (m *EstablishCooperationPacketData) Reset()         { *m = EstablishCooperationPacketData{} }
func (m *EstablishCooperationPacketData) String() string { return proto.CompactTextString(m) }
func (*EstablishCooperationPacketData) ProtoMessage()    {}
func (*EstablishCooperationPacketData) Descriptor() ([]byte, []int) {
	return fileDescriptor_2796c1a2923b5b8e, []int{2}
}
func (m *EstablishCooperationPacketData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EstablishCooperationPacketData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EstablishCooperationPacketData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EstablishCooperationPacketData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EstablishCooperationPacketData.Merge(m, src)
}
func (m *EstablishCooperationPacketData) XXX_Size() int {
	return m.Size()
}
func (m *EstablishCooperationPacketData) XXX_DiscardUnknown() {
	xxx_messageInfo_EstablishCooperationPacketData.DiscardUnknown(m)
}

var xxx_messageInfo_EstablishCooperationPacketData proto.InternalMessageInfo

func (m *EstablishCooperationPacketData) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *EstablishCooperationPacketData) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

// EstablishCooperationPacketAck defines a struct for the packet acknowledgment
type EstablishCooperationPacketAck struct {
	Confirmation string `protobuf:"bytes,1,opt,name=confirmation,proto3" json:"confirmation,omitempty"`
	ConfirmedBy  string `protobuf:"bytes,2,opt,name=confirmedBy,proto3" json:"confirmedBy,omitempty"`
	Location     string `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
}

func (m *EstablishCooperationPacketAck) Reset()         { *m = EstablishCooperationPacketAck{} }
func (m *EstablishCooperationPacketAck) String() string { return proto.CompactTextString(m) }
func (*EstablishCooperationPacketAck) ProtoMessage()    {}
func (*EstablishCooperationPacketAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_2796c1a2923b5b8e, []int{3}
}
func (m *EstablishCooperationPacketAck) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EstablishCooperationPacketAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EstablishCooperationPacketAck.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EstablishCooperationPacketAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EstablishCooperationPacketAck.Merge(m, src)
}
func (m *EstablishCooperationPacketAck) XXX_Size() int {
	return m.Size()
}
func (m *EstablishCooperationPacketAck) XXX_DiscardUnknown() {
	xxx_messageInfo_EstablishCooperationPacketAck.DiscardUnknown(m)
}

var xxx_messageInfo_EstablishCooperationPacketAck proto.InternalMessageInfo

func (m *EstablishCooperationPacketAck) GetConfirmation() string {
	if m != nil {
		return m.Confirmation
	}
	return ""
}

func (m *EstablishCooperationPacketAck) GetConfirmedBy() string {
	if m != nil {
		return m.ConfirmedBy
	}
	return ""
}

func (m *EstablishCooperationPacketAck) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

// RequestDelegationPacketData defines a struct for the packet payload
type RequestDelegationPacketData struct {
	DelegationAction string      `protobuf:"bytes,1,opt,name=delegationAction,proto3" json:"delegationAction,omitempty"`
	Permission       *Permission `protobuf:"bytes,2,opt,name=permission,proto3" json:"permission,omitempty"`
}

func (m *RequestDelegationPacketData) Reset()         { *m = RequestDelegationPacketData{} }
func (m *RequestDelegationPacketData) String() string { return proto.CompactTextString(m) }
func (*RequestDelegationPacketData) ProtoMessage()    {}
func (*RequestDelegationPacketData) Descriptor() ([]byte, []int) {
	return fileDescriptor_2796c1a2923b5b8e, []int{4}
}
func (m *RequestDelegationPacketData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RequestDelegationPacketData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RequestDelegationPacketData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RequestDelegationPacketData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestDelegationPacketData.Merge(m, src)
}
func (m *RequestDelegationPacketData) XXX_Size() int {
	return m.Size()
}
func (m *RequestDelegationPacketData) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestDelegationPacketData.DiscardUnknown(m)
}

var xxx_messageInfo_RequestDelegationPacketData proto.InternalMessageInfo

func (m *RequestDelegationPacketData) GetDelegationAction() string {
	if m != nil {
		return m.DelegationAction
	}
	return ""
}

func (m *RequestDelegationPacketData) GetPermission() *Permission {
	if m != nil {
		return m.Permission
	}
	return nil
}

// RequestDelegationPacketAck defines a struct for the packet acknowledgment
type RequestDelegationPacketAck struct {
	DecisionDomain       string                `protobuf:"bytes,1,opt,name=decisionDomain,proto3" json:"decisionDomain,omitempty"`
	Decision             string                `protobuf:"bytes,2,opt,name=decision,proto3" json:"decision,omitempty"`
	DelegationConditions *DelegationConditions `protobuf:"bytes,3,opt,name=delegationConditions,proto3" json:"delegationConditions,omitempty"`
}

func (m *RequestDelegationPacketAck) Reset()         { *m = RequestDelegationPacketAck{} }
func (m *RequestDelegationPacketAck) String() string { return proto.CompactTextString(m) }
func (*RequestDelegationPacketAck) ProtoMessage()    {}
func (*RequestDelegationPacketAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_2796c1a2923b5b8e, []int{5}
}
func (m *RequestDelegationPacketAck) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RequestDelegationPacketAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RequestDelegationPacketAck.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RequestDelegationPacketAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestDelegationPacketAck.Merge(m, src)
}
func (m *RequestDelegationPacketAck) XXX_Size() int {
	return m.Size()
}
func (m *RequestDelegationPacketAck) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestDelegationPacketAck.DiscardUnknown(m)
}

var xxx_messageInfo_RequestDelegationPacketAck proto.InternalMessageInfo

func (m *RequestDelegationPacketAck) GetDecisionDomain() string {
	if m != nil {
		return m.DecisionDomain
	}
	return ""
}

func (m *RequestDelegationPacketAck) GetDecision() string {
	if m != nil {
		return m.Decision
	}
	return ""
}

func (m *RequestDelegationPacketAck) GetDelegationConditions() *DelegationConditions {
	if m != nil {
		return m.DelegationConditions
	}
	return nil
}

func init() {
	proto.RegisterType((*FdpdPacketData)(nil), "delegationcontrol.fdpd.FdpdPacketData")
	proto.RegisterType((*NoData)(nil), "delegationcontrol.fdpd.NoData")
	proto.RegisterType((*EstablishCooperationPacketData)(nil), "delegationcontrol.fdpd.EstablishCooperationPacketData")
	proto.RegisterType((*EstablishCooperationPacketAck)(nil), "delegationcontrol.fdpd.EstablishCooperationPacketAck")
	proto.RegisterType((*RequestDelegationPacketData)(nil), "delegationcontrol.fdpd.RequestDelegationPacketData")
	proto.RegisterType((*RequestDelegationPacketAck)(nil), "delegationcontrol.fdpd.RequestDelegationPacketAck")
}

func init() { proto.RegisterFile("fdpd/packet.proto", fileDescriptor_2796c1a2923b5b8e) }

var fileDescriptor_2796c1a2923b5b8e = []byte{
	// 435 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0x41, 0x6b, 0xd4, 0x40,
	0x14, 0xce, 0xb4, 0x10, 0xb6, 0xaf, 0x52, 0x74, 0xd0, 0x5a, 0x22, 0x0e, 0xcb, 0x1c, 0x44, 0x44,
	0xb2, 0x60, 0x41, 0x7a, 0x6d, 0x1a, 0xc5, 0x93, 0x94, 0xe0, 0xc9, 0x8b, 0xa6, 0x33, 0x53, 0x1d,
	0x9a, 0xcd, 0xc4, 0xcc, 0x08, 0xed, 0xd1, 0x1f, 0x20, 0xf8, 0x8f, 0x04, 0x4f, 0x1e, 0x7b, 0xf4,
	0x28, 0xbb, 0x7f, 0x44, 0x32, 0x99, 0x4d, 0xb2, 0x6e, 0x66, 0x6f, 0x79, 0x1f, 0xdf, 0xfb, 0xbe,
	0x2f, 0xef, 0xcd, 0x83, 0x7b, 0x97, 0xbc, 0xe2, 0xb3, 0x2a, 0x67, 0x57, 0xc2, 0xc4, 0x55, 0xad,
	0x8c, 0xc2, 0x87, 0x5c, 0x14, 0xe2, 0x53, 0x6e, 0xa4, 0x2a, 0x99, 0x2a, 0x4d, 0xad, 0x8a, 0xb8,
	0x21, 0x45, 0x0f, 0x5a, 0xaa, 0xa8, 0xe7, 0x52, 0x6b, 0xa9, 0xca, 0x96, 0x1e, 0x4d, 0x2d, 0xdc,
	0xf7, 0x7c, 0x60, 0xaa, 0xe4, 0xb2, 0xf9, 0xd2, 0x2d, 0x83, 0xfe, 0xdc, 0x81, 0x83, 0xd7, 0xbc,
	0xe2, 0xe7, 0xd6, 0x25, 0xcd, 0x4d, 0x8e, 0x4f, 0x20, 0x2c, 0x55, 0xf3, 0x75, 0x84, 0xa6, 0xe8,
	0xe9, 0xfe, 0x0b, 0x12, 0x8f, 0x9b, 0xc6, 0x6f, 0x2d, 0xeb, 0x4d, 0x90, 0x39, 0x3e, 0x56, 0xf0,
	0xb0, 0x16, 0x5f, 0xbe, 0x0a, 0x6d, 0xd2, 0xae, 0xa3, 0x15, 0x3e, 0xda, 0xb5, 0x52, 0xc7, 0x3e,
	0xa9, 0x6c, 0xbc, 0xcd, 0xe9, 0xfb, 0x54, 0xf1, 0x35, 0x44, 0x42, 0x9b, 0xfc, 0xa2, 0x90, 0xfa,
	0xf3, 0x99, 0x52, 0x95, 0xa8, 0x87, 0x9e, 0x3b, 0xd6, 0xf3, 0xa5, 0xcf, 0xf3, 0x95, 0xb7, 0xd3,
	0xd9, 0x6e, 0xd1, 0x4e, 0x26, 0x10, 0xb6, 0x8b, 0xa1, 0x13, 0x08, 0xdb, 0x41, 0xd0, 0x77, 0x40,
	0xb6, 0x6b, 0xe2, 0x08, 0x26, 0x85, 0x62, 0x16, 0xb5, 0xc3, 0xdd, 0xcb, 0xba, 0x1a, 0x1f, 0x42,
	0xa8, 0x45, 0xc9, 0x45, 0x6d, 0x73, 0xef, 0x65, 0xae, 0xa2, 0xdf, 0x10, 0x3c, 0xf6, 0xcb, 0x9e,
	0xb2, 0x2b, 0x4c, 0xe1, 0x0e, 0x53, 0xe5, 0xa5, 0xac, 0xe7, 0x43, 0xe5, 0x35, 0x0c, 0x4f, 0x61,
	0xdf, 0xd5, 0x82, 0x27, 0x37, 0xce, 0x62, 0x08, 0xad, 0x65, 0xdb, 0x5d, 0xcf, 0x46, 0xbf, 0x23,
	0x78, 0xb4, 0x65, 0x45, 0xf8, 0x19, 0xdc, 0xed, 0x87, 0x7c, 0xca, 0x06, 0x29, 0x36, 0x70, 0x9c,
	0x00, 0xf4, 0xef, 0xd4, 0xed, 0x88, 0xfa, 0x76, 0x74, 0xde, 0x31, 0xb3, 0x41, 0x17, 0xfd, 0x85,
	0x20, 0xf2, 0xe4, 0x69, 0x06, 0xf2, 0x04, 0x0e, 0xb8, 0x60, 0xb2, 0xa1, 0xa6, 0x6a, 0x9e, 0xcb,
	0x55, 0x98, 0xff, 0xd0, 0xe6, 0x97, 0x57, 0x88, 0x9b, 0x48, 0x57, 0xe3, 0x8f, 0x70, 0xbf, 0xcf,
	0x74, 0xd6, 0x9d, 0x8d, 0x7b, 0xc8, 0xcf, 0x7d, 0x81, 0xd3, 0x91, 0x9e, 0x6c, 0x54, 0x29, 0x39,
	0xf9, 0xbd, 0x20, 0xe8, 0x76, 0x41, 0xd0, 0xdf, 0x05, 0x41, 0x3f, 0x96, 0x24, 0xb8, 0x5d, 0x92,
	0xe0, 0xcf, 0x92, 0x04, 0xef, 0xc9, 0x86, 0xf8, 0xec, 0x7a, 0x66, 0x4f, 0xd9, 0xdc, 0x54, 0x42,
	0x5f, 0x84, 0xf6, 0x76, 0x8f, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xe9, 0x5b, 0x9a, 0xcd, 0x21,
	0x04, 0x00, 0x00,
}

func (m *FdpdPacketData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FdpdPacketData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FdpdPacketData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Packet != nil {
		{
			size := m.Packet.Size()
			i -= size
			if _, err := m.Packet.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *FdpdPacketData_NoData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FdpdPacketData_NoData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NoData != nil {
		{
			size, err := m.NoData.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPacket(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *FdpdPacketData_EstablishCooperationPacket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FdpdPacketData_EstablishCooperationPacket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.EstablishCooperationPacket != nil {
		{
			size, err := m.EstablishCooperationPacket.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPacket(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *FdpdPacketData_RequestDelegationPacket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FdpdPacketData_RequestDelegationPacket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.RequestDelegationPacket != nil {
		{
			size, err := m.RequestDelegationPacket.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPacket(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *NoData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NoData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NoData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *EstablishCooperationPacketData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EstablishCooperationPacketData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EstablishCooperationPacketData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintPacket(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Location) > 0 {
		i -= len(m.Location)
		copy(dAtA[i:], m.Location)
		i = encodeVarintPacket(dAtA, i, uint64(len(m.Location)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EstablishCooperationPacketAck) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EstablishCooperationPacketAck) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EstablishCooperationPacketAck) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Location) > 0 {
		i -= len(m.Location)
		copy(dAtA[i:], m.Location)
		i = encodeVarintPacket(dAtA, i, uint64(len(m.Location)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ConfirmedBy) > 0 {
		i -= len(m.ConfirmedBy)
		copy(dAtA[i:], m.ConfirmedBy)
		i = encodeVarintPacket(dAtA, i, uint64(len(m.ConfirmedBy)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Confirmation) > 0 {
		i -= len(m.Confirmation)
		copy(dAtA[i:], m.Confirmation)
		i = encodeVarintPacket(dAtA, i, uint64(len(m.Confirmation)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RequestDelegationPacketData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RequestDelegationPacketData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RequestDelegationPacketData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Permission != nil {
		{
			size, err := m.Permission.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPacket(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.DelegationAction) > 0 {
		i -= len(m.DelegationAction)
		copy(dAtA[i:], m.DelegationAction)
		i = encodeVarintPacket(dAtA, i, uint64(len(m.DelegationAction)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RequestDelegationPacketAck) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RequestDelegationPacketAck) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RequestDelegationPacketAck) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DelegationConditions != nil {
		{
			size, err := m.DelegationConditions.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPacket(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Decision) > 0 {
		i -= len(m.Decision)
		copy(dAtA[i:], m.Decision)
		i = encodeVarintPacket(dAtA, i, uint64(len(m.Decision)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.DecisionDomain) > 0 {
		i -= len(m.DecisionDomain)
		copy(dAtA[i:], m.DecisionDomain)
		i = encodeVarintPacket(dAtA, i, uint64(len(m.DecisionDomain)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintPacket(dAtA []byte, offset int, v uint64) int {
	offset -= sovPacket(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *FdpdPacketData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Packet != nil {
		n += m.Packet.Size()
	}
	return n
}

func (m *FdpdPacketData_NoData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NoData != nil {
		l = m.NoData.Size()
		n += 1 + l + sovPacket(uint64(l))
	}
	return n
}
func (m *FdpdPacketData_EstablishCooperationPacket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.EstablishCooperationPacket != nil {
		l = m.EstablishCooperationPacket.Size()
		n += 1 + l + sovPacket(uint64(l))
	}
	return n
}
func (m *FdpdPacketData_RequestDelegationPacket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RequestDelegationPacket != nil {
		l = m.RequestDelegationPacket.Size()
		n += 1 + l + sovPacket(uint64(l))
	}
	return n
}
func (m *NoData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *EstablishCooperationPacketData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Location)
	if l > 0 {
		n += 1 + l + sovPacket(uint64(l))
	}
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovPacket(uint64(l))
	}
	return n
}

func (m *EstablishCooperationPacketAck) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Confirmation)
	if l > 0 {
		n += 1 + l + sovPacket(uint64(l))
	}
	l = len(m.ConfirmedBy)
	if l > 0 {
		n += 1 + l + sovPacket(uint64(l))
	}
	l = len(m.Location)
	if l > 0 {
		n += 1 + l + sovPacket(uint64(l))
	}
	return n
}

func (m *RequestDelegationPacketData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DelegationAction)
	if l > 0 {
		n += 1 + l + sovPacket(uint64(l))
	}
	if m.Permission != nil {
		l = m.Permission.Size()
		n += 1 + l + sovPacket(uint64(l))
	}
	return n
}

func (m *RequestDelegationPacketAck) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DecisionDomain)
	if l > 0 {
		n += 1 + l + sovPacket(uint64(l))
	}
	l = len(m.Decision)
	if l > 0 {
		n += 1 + l + sovPacket(uint64(l))
	}
	if m.DelegationConditions != nil {
		l = m.DelegationConditions.Size()
		n += 1 + l + sovPacket(uint64(l))
	}
	return n
}

func sovPacket(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPacket(x uint64) (n int) {
	return sovPacket(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *FdpdPacketData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPacket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FdpdPacketData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FdpdPacketData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &NoData{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Packet = &FdpdPacketData_NoData{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EstablishCooperationPacket", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &EstablishCooperationPacketData{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Packet = &FdpdPacketData_EstablishCooperationPacket{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestDelegationPacket", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &RequestDelegationPacketData{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Packet = &FdpdPacketData_RequestDelegationPacket{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPacket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPacket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NoData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPacket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NoData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NoData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPacket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPacket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EstablishCooperationPacketData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPacket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EstablishCooperationPacketData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EstablishCooperationPacketData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Location = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPacket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPacket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EstablishCooperationPacketAck) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPacket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EstablishCooperationPacketAck: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EstablishCooperationPacketAck: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Confirmation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Confirmation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfirmedBy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConfirmedBy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Location = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPacket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPacket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RequestDelegationPacketData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPacket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RequestDelegationPacketData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RequestDelegationPacketData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegationAction", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DelegationAction = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Permission", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Permission == nil {
				m.Permission = &Permission{}
			}
			if err := m.Permission.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPacket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPacket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RequestDelegationPacketAck) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPacket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RequestDelegationPacketAck: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RequestDelegationPacketAck: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DecisionDomain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DecisionDomain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Decision", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Decision = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegationConditions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DelegationConditions == nil {
				m.DelegationConditions = &DelegationConditions{}
			}
			if err := m.DelegationConditions.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPacket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPacket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPacket(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPacket
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPacket
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPacket
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPacket
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPacket        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPacket          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPacket = fmt.Errorf("proto: unexpected end of group")
)
