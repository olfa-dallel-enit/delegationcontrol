// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: fdpd/selection_policy.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type SelectionPolicy struct {
	DomainList            []string  `protobuf:"bytes,1,rep,name=domainList,proto3" json:"domainList,omitempty"`
	DelegatorLocationList []string  `protobuf:"bytes,2,rep,name=delegatorLocationList,proto3" json:"delegatorLocationList,omitempty"`
	Cost                  uint64    `protobuf:"varint,3,opt,name=cost,proto3" json:"cost,omitempty"`
	NbDelegations         uint64    `protobuf:"varint,4,opt,name=nbDelegations,proto3" json:"nbDelegations,omitempty"`
	Validity              *Validity `protobuf:"bytes,5,opt,name=validity,proto3" json:"validity,omitempty"`
	Creator               string    `protobuf:"bytes,6,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *SelectionPolicy) Reset()         { *m = SelectionPolicy{} }
func (m *SelectionPolicy) String() string { return proto.CompactTextString(m) }
func (*SelectionPolicy) ProtoMessage()    {}
func (*SelectionPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd0f297d8b950b4d, []int{0}
}
func (m *SelectionPolicy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SelectionPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SelectionPolicy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SelectionPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectionPolicy.Merge(m, src)
}
func (m *SelectionPolicy) XXX_Size() int {
	return m.Size()
}
func (m *SelectionPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectionPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_SelectionPolicy proto.InternalMessageInfo

func (m *SelectionPolicy) GetDomainList() []string {
	if m != nil {
		return m.DomainList
	}
	return nil
}

func (m *SelectionPolicy) GetDelegatorLocationList() []string {
	if m != nil {
		return m.DelegatorLocationList
	}
	return nil
}

func (m *SelectionPolicy) GetCost() uint64 {
	if m != nil {
		return m.Cost
	}
	return 0
}

func (m *SelectionPolicy) GetNbDelegations() uint64 {
	if m != nil {
		return m.NbDelegations
	}
	return 0
}

func (m *SelectionPolicy) GetValidity() *Validity {
	if m != nil {
		return m.Validity
	}
	return nil
}

func (m *SelectionPolicy) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*SelectionPolicy)(nil), "delegationcontrol.fdpd.SelectionPolicy")
}

func init() { proto.RegisterFile("fdpd/selection_policy.proto", fileDescriptor_cd0f297d8b950b4d) }

var fileDescriptor_cd0f297d8b950b4d = []byte{
	// 264 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4e, 0x4b, 0x29, 0x48,
	0xd1, 0x2f, 0x4e, 0xcd, 0x49, 0x4d, 0x2e, 0xc9, 0xcc, 0xcf, 0x8b, 0x2f, 0xc8, 0xcf, 0xc9, 0x4c,
	0xae, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x4b, 0x49, 0xcd, 0x49, 0x4d, 0x4f, 0x04,
	0x49, 0x24, 0xe7, 0xe7, 0x95, 0x14, 0xe5, 0xe7, 0xe8, 0x81, 0x94, 0x4b, 0x09, 0x83, 0x35, 0x95,
	0x25, 0xe6, 0x64, 0xa6, 0x64, 0x96, 0x40, 0x15, 0x2b, 0xfd, 0x64, 0xe4, 0xe2, 0x0f, 0x86, 0x99,
	0x13, 0x00, 0x36, 0x46, 0x48, 0x8e, 0x8b, 0x2b, 0x25, 0x3f, 0x37, 0x31, 0x33, 0xcf, 0x27, 0xb3,
	0xb8, 0x44, 0x82, 0x51, 0x81, 0x59, 0x83, 0x33, 0x08, 0x49, 0x44, 0xc8, 0x84, 0x4b, 0x14, 0x6a,
	0x45, 0x7e, 0x91, 0x4f, 0x7e, 0x32, 0xd8, 0x26, 0xb0, 0x52, 0x26, 0xb0, 0x52, 0xec, 0x92, 0x42,
	0x42, 0x5c, 0x2c, 0xc9, 0xf9, 0xc5, 0x25, 0x12, 0xcc, 0x0a, 0x8c, 0x1a, 0x2c, 0x41, 0x60, 0xb6,
	0x90, 0x0a, 0x17, 0x6f, 0x5e, 0x92, 0x0b, 0xdc, 0xb9, 0xc5, 0x12, 0x2c, 0x60, 0x49, 0x54, 0x41,
	0x21, 0x1b, 0x2e, 0x0e, 0x98, 0xab, 0x25, 0x58, 0x15, 0x18, 0x35, 0xb8, 0x8d, 0x14, 0xf4, 0xb0,
	0xfb, 0x51, 0x2f, 0x0c, 0xaa, 0x2e, 0x08, 0xae, 0x43, 0x48, 0x82, 0x8b, 0x3d, 0xb9, 0x28, 0x15,
	0xe4, 0x1c, 0x09, 0x36, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x18, 0xd7, 0xc9, 0xe2, 0xc4, 0x23, 0x39,
	0xc6, 0x0b, 0x8f, 0xe4, 0x18, 0x1f, 0x3c, 0x92, 0x63, 0x9c, 0xf0, 0x58, 0x8e, 0xe1, 0xc2, 0x63,
	0x39, 0x86, 0x1b, 0x8f, 0xe5, 0x18, 0xa2, 0xe4, 0x30, 0x8c, 0xd7, 0xaf, 0xd0, 0x07, 0x07, 0x5f,
	0x49, 0x65, 0x41, 0x6a, 0x71, 0x12, 0x1b, 0x38, 0xf0, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x09, 0x80, 0x4c, 0xd8, 0x88, 0x01, 0x00, 0x00,
}

func (m *SelectionPolicy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SelectionPolicy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SelectionPolicy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintSelectionPolicy(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x32
	}
	if m.Validity != nil {
		{
			size, err := m.Validity.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSelectionPolicy(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.NbDelegations != 0 {
		i = encodeVarintSelectionPolicy(dAtA, i, uint64(m.NbDelegations))
		i--
		dAtA[i] = 0x20
	}
	if m.Cost != 0 {
		i = encodeVarintSelectionPolicy(dAtA, i, uint64(m.Cost))
		i--
		dAtA[i] = 0x18
	}
	if len(m.DelegatorLocationList) > 0 {
		for iNdEx := len(m.DelegatorLocationList) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.DelegatorLocationList[iNdEx])
			copy(dAtA[i:], m.DelegatorLocationList[iNdEx])
			i = encodeVarintSelectionPolicy(dAtA, i, uint64(len(m.DelegatorLocationList[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.DomainList) > 0 {
		for iNdEx := len(m.DomainList) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.DomainList[iNdEx])
			copy(dAtA[i:], m.DomainList[iNdEx])
			i = encodeVarintSelectionPolicy(dAtA, i, uint64(len(m.DomainList[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintSelectionPolicy(dAtA []byte, offset int, v uint64) int {
	offset -= sovSelectionPolicy(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SelectionPolicy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.DomainList) > 0 {
		for _, s := range m.DomainList {
			l = len(s)
			n += 1 + l + sovSelectionPolicy(uint64(l))
		}
	}
	if len(m.DelegatorLocationList) > 0 {
		for _, s := range m.DelegatorLocationList {
			l = len(s)
			n += 1 + l + sovSelectionPolicy(uint64(l))
		}
	}
	if m.Cost != 0 {
		n += 1 + sovSelectionPolicy(uint64(m.Cost))
	}
	if m.NbDelegations != 0 {
		n += 1 + sovSelectionPolicy(uint64(m.NbDelegations))
	}
	if m.Validity != nil {
		l = m.Validity.Size()
		n += 1 + l + sovSelectionPolicy(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovSelectionPolicy(uint64(l))
	}
	return n
}

func sovSelectionPolicy(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSelectionPolicy(x uint64) (n int) {
	return sovSelectionPolicy(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SelectionPolicy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSelectionPolicy
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SelectionPolicy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SelectionPolicy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DomainList", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSelectionPolicy
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSelectionPolicy
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSelectionPolicy
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DomainList = append(m.DomainList, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegatorLocationList", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSelectionPolicy
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSelectionPolicy
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSelectionPolicy
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DelegatorLocationList = append(m.DelegatorLocationList, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cost", wireType)
			}
			m.Cost = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSelectionPolicy
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cost |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NbDelegations", wireType)
			}
			m.NbDelegations = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSelectionPolicy
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NbDelegations |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Validity", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSelectionPolicy
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSelectionPolicy
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSelectionPolicy
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Validity == nil {
				m.Validity = &Validity{}
			}
			if err := m.Validity.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSelectionPolicy
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSelectionPolicy
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSelectionPolicy
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSelectionPolicy(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSelectionPolicy
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSelectionPolicy(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSelectionPolicy
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSelectionPolicy
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSelectionPolicy
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSelectionPolicy
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSelectionPolicy
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSelectionPolicy
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSelectionPolicy        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSelectionPolicy          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSelectionPolicy = fmt.Errorf("proto: unexpected end of group")
)
