// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: fdpd/delegation_request_log.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DelegationRequestLog struct {
	Id           uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Transaction  string `protobuf:"bytes,2,opt,name=transaction,proto3" json:"transaction,omitempty"`
	RequestLabel string `protobuf:"bytes,3,opt,name=requestLabel,proto3" json:"requestLabel,omitempty"`
	Details      string `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`
	Function     string `protobuf:"bytes,5,opt,name=function,proto3" json:"function,omitempty"`
	Creator      string `protobuf:"bytes,6,opt,name=creator,proto3" json:"creator,omitempty"`
	Timestamp    string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (m *DelegationRequestLog) Reset()         { *m = DelegationRequestLog{} }
func (m *DelegationRequestLog) String() string { return proto.CompactTextString(m) }
func (*DelegationRequestLog) ProtoMessage()    {}
func (*DelegationRequestLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b62ab4b50b81ad0, []int{0}
}
func (m *DelegationRequestLog) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DelegationRequestLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DelegationRequestLog.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DelegationRequestLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelegationRequestLog.Merge(m, src)
}
func (m *DelegationRequestLog) XXX_Size() int {
	return m.Size()
}
func (m *DelegationRequestLog) XXX_DiscardUnknown() {
	xxx_messageInfo_DelegationRequestLog.DiscardUnknown(m)
}

var xxx_messageInfo_DelegationRequestLog proto.InternalMessageInfo

func (m *DelegationRequestLog) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DelegationRequestLog) GetTransaction() string {
	if m != nil {
		return m.Transaction
	}
	return ""
}

func (m *DelegationRequestLog) GetRequestLabel() string {
	if m != nil {
		return m.RequestLabel
	}
	return ""
}

func (m *DelegationRequestLog) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *DelegationRequestLog) GetFunction() string {
	if m != nil {
		return m.Function
	}
	return ""
}

func (m *DelegationRequestLog) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *DelegationRequestLog) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func init() {
	proto.RegisterType((*DelegationRequestLog)(nil), "delegationcontrol.fdpd.DelegationRequestLog")
}

func init() { proto.RegisterFile("fdpd/delegation_request_log.proto", fileDescriptor_5b62ab4b50b81ad0) }

var fileDescriptor_5b62ab4b50b81ad0 = []byte{
	// 253 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xb1, 0x4e, 0xc3, 0x30,
	0x14, 0x45, 0xe3, 0x50, 0x5a, 0x6a, 0x10, 0x83, 0x85, 0x90, 0x85, 0x90, 0x15, 0x3a, 0x75, 0x6a,
	0x06, 0x16, 0x66, 0xc4, 0xd8, 0x29, 0x23, 0x4b, 0xe5, 0xc6, 0xaf, 0x91, 0x25, 0x37, 0x36, 0xf6,
	0xab, 0x04, 0x7f, 0xc1, 0x67, 0x31, 0x76, 0x44, 0x4c, 0x28, 0xf9, 0x11, 0x14, 0xa7, 0xb4, 0xa0,
	0x8e, 0xf7, 0x9e, 0x77, 0x6c, 0xe9, 0xd2, 0xbb, 0x95, 0x72, 0x2a, 0x57, 0x60, 0xa0, 0x92, 0xa8,
	0x6d, 0xbd, 0xf0, 0xf0, 0xb2, 0x81, 0x80, 0x0b, 0x63, 0xab, 0x99, 0xf3, 0x16, 0x2d, 0xbb, 0x3e,
	0xd0, 0xd2, 0xd6, 0xe8, 0xad, 0x99, 0x75, 0xd2, 0xe4, 0x8b, 0xd0, 0xab, 0xa7, 0x3d, 0x2a, 0x7a,
	0x6f, 0x6e, 0x2b, 0x76, 0x49, 0x53, 0xad, 0x38, 0xc9, 0xc8, 0x74, 0x50, 0xa4, 0x5a, 0xb1, 0x8c,
	0x9e, 0xa3, 0x97, 0x75, 0x90, 0x65, 0x77, 0xc8, 0xd3, 0x8c, 0x4c, 0xc7, 0xc5, 0xdf, 0x8a, 0x4d,
	0xe8, 0xc5, 0xee, 0xdf, 0xb9, 0x5c, 0x82, 0xe1, 0x27, 0xf1, 0xe4, 0x5f, 0xc7, 0x38, 0x1d, 0x29,
	0x40, 0xa9, 0x4d, 0xe0, 0x83, 0x88, 0x7f, 0x23, 0xbb, 0xa1, 0x67, 0xab, 0x4d, 0xdd, 0x3f, 0x7e,
	0x1a, 0xd1, 0x3e, 0x77, 0x56, 0xe9, 0x41, 0xa2, 0xf5, 0x7c, 0xd8, 0x5b, 0xbb, 0xc8, 0x6e, 0xe9,
	0x18, 0xf5, 0x1a, 0x02, 0xca, 0xb5, 0xe3, 0xa3, 0xc8, 0x0e, 0xc5, 0xe3, 0xc3, 0x47, 0x23, 0xc8,
	0xb6, 0x11, 0xe4, 0xbb, 0x11, 0xe4, 0xbd, 0x15, 0xc9, 0xb6, 0x15, 0xc9, 0x67, 0x2b, 0x92, 0x67,
	0x71, 0x34, 0x47, 0xfe, 0x9a, 0xc7, 0x15, 0xf1, 0xcd, 0x41, 0x58, 0x0e, 0xe3, 0x6a, 0xf7, 0x3f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xde, 0x4a, 0xb0, 0x52, 0x5a, 0x01, 0x00, 0x00,
}

func (m *DelegationRequestLog) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DelegationRequestLog) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DelegationRequestLog) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Timestamp) > 0 {
		i -= len(m.Timestamp)
		copy(dAtA[i:], m.Timestamp)
		i = encodeVarintDelegationRequestLog(dAtA, i, uint64(len(m.Timestamp)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintDelegationRequestLog(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Function) > 0 {
		i -= len(m.Function)
		copy(dAtA[i:], m.Function)
		i = encodeVarintDelegationRequestLog(dAtA, i, uint64(len(m.Function)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Details) > 0 {
		i -= len(m.Details)
		copy(dAtA[i:], m.Details)
		i = encodeVarintDelegationRequestLog(dAtA, i, uint64(len(m.Details)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.RequestLabel) > 0 {
		i -= len(m.RequestLabel)
		copy(dAtA[i:], m.RequestLabel)
		i = encodeVarintDelegationRequestLog(dAtA, i, uint64(len(m.RequestLabel)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Transaction) > 0 {
		i -= len(m.Transaction)
		copy(dAtA[i:], m.Transaction)
		i = encodeVarintDelegationRequestLog(dAtA, i, uint64(len(m.Transaction)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintDelegationRequestLog(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintDelegationRequestLog(dAtA []byte, offset int, v uint64) int {
	offset -= sovDelegationRequestLog(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *DelegationRequestLog) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovDelegationRequestLog(uint64(m.Id))
	}
	l = len(m.Transaction)
	if l > 0 {
		n += 1 + l + sovDelegationRequestLog(uint64(l))
	}
	l = len(m.RequestLabel)
	if l > 0 {
		n += 1 + l + sovDelegationRequestLog(uint64(l))
	}
	l = len(m.Details)
	if l > 0 {
		n += 1 + l + sovDelegationRequestLog(uint64(l))
	}
	l = len(m.Function)
	if l > 0 {
		n += 1 + l + sovDelegationRequestLog(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovDelegationRequestLog(uint64(l))
	}
	l = len(m.Timestamp)
	if l > 0 {
		n += 1 + l + sovDelegationRequestLog(uint64(l))
	}
	return n
}

func sovDelegationRequestLog(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDelegationRequestLog(x uint64) (n int) {
	return sovDelegationRequestLog(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *DelegationRequestLog) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDelegationRequestLog
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DelegationRequestLog: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DelegationRequestLog: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegationRequestLog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Transaction", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegationRequestLog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDelegationRequestLog
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDelegationRequestLog
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Transaction = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestLabel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegationRequestLog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDelegationRequestLog
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDelegationRequestLog
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestLabel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Details", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegationRequestLog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDelegationRequestLog
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDelegationRequestLog
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Details = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Function", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegationRequestLog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDelegationRequestLog
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDelegationRequestLog
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Function = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegationRequestLog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDelegationRequestLog
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDelegationRequestLog
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegationRequestLog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDelegationRequestLog
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDelegationRequestLog
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Timestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDelegationRequestLog(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDelegationRequestLog
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDelegationRequestLog(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDelegationRequestLog
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDelegationRequestLog
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDelegationRequestLog
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDelegationRequestLog
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDelegationRequestLog
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDelegationRequestLog
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDelegationRequestLog        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDelegationRequestLog          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDelegationRequestLog = fmt.Errorf("proto: unexpected end of group")
)
