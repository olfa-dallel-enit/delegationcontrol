syntax = "proto3";
package delegationcontrol.fdpd;

import "fdpd/local_domain.proto";
import "fdpd/domain.proto";
import "fdpd/forward_policy.proto";
import "fdpd/decision_policy.proto";
import "fdpd/delegation_decision.proto";
import "fdpd/selection_policy.proto";
import "fdpd/delegation_request.proto";
import "fdpd/final_delegation_decision.proto";
import "fdpd/delegation_request_log.proto";
import "fdpd/calculation_time.proto";
// this line is used by starport scaffolding # proto/tx/import
import "fdpd/delegation_conditions.proto";
import "fdpd/permission.proto";
import "fdpd/selection_criteria.proto";
import "fdpd/validity.proto";

option go_package = "delegationcontrol/x/fdpd/types";

// Msg defines the Msg service.
service Msg {
      rpc CreateLocalDomain(MsgCreateLocalDomain) returns (MsgCreateLocalDomainResponse);
  rpc UpdateLocalDomain(MsgUpdateLocalDomain) returns (MsgUpdateLocalDomainResponse);
  rpc DeleteLocalDomain(MsgDeleteLocalDomain) returns (MsgDeleteLocalDomainResponse);
rpc CreateDomain(MsgCreateDomain) returns (MsgCreateDomainResponse);
  rpc UpdateDomain(MsgUpdateDomain) returns (MsgUpdateDomainResponse);
  rpc DeleteDomain(MsgDeleteDomain) returns (MsgDeleteDomainResponse);
  rpc SendEstablishCooperation(MsgSendEstablishCooperation) returns (MsgSendEstablishCooperationResponse);
  rpc CreateForwardPolicy(MsgCreateForwardPolicy) returns (MsgCreateForwardPolicyResponse);
  rpc UpdateForwardPolicy(MsgUpdateForwardPolicy) returns (MsgUpdateForwardPolicyResponse);
  rpc DeleteForwardPolicy(MsgDeleteForwardPolicy) returns (MsgDeleteForwardPolicyResponse);
rpc CreateValidity(MsgCreateValidity) returns (MsgCreateValidityResponse);
  rpc UpdateValidity(MsgUpdateValidity) returns (MsgUpdateValidityResponse);
  rpc DeleteValidity(MsgDeleteValidity) returns (MsgDeleteValidityResponse);
  rpc CreateDecisionPolicy(MsgCreateDecisionPolicy) returns (MsgCreateDecisionPolicyResponse);
  rpc UpdateDecisionPolicy(MsgUpdateDecisionPolicy) returns (MsgUpdateDecisionPolicyResponse);
  rpc DeleteDecisionPolicy(MsgDeleteDecisionPolicy) returns (MsgDeleteDecisionPolicyResponse);
rpc CreatePermission(MsgCreatePermission) returns (MsgCreatePermissionResponse);
  rpc UpdatePermission(MsgUpdatePermission) returns (MsgUpdatePermissionResponse);
  rpc DeletePermission(MsgDeletePermission) returns (MsgDeletePermissionResponse);
rpc CreateDelegationConditions(MsgCreateDelegationConditions) returns (MsgCreateDelegationConditionsResponse);
  rpc UpdateDelegationConditions(MsgUpdateDelegationConditions) returns (MsgUpdateDelegationConditionsResponse);
  rpc DeleteDelegationConditions(MsgDeleteDelegationConditions) returns (MsgDeleteDelegationConditionsResponse);
  rpc SendRequestDelegation(MsgSendRequestDelegation) returns (MsgSendRequestDelegationResponse);
  rpc ConfigureLocalDomain(MsgConfigureLocalDomain) returns (MsgConfigureLocalDomainResponse);
rpc CreateDelegationDecision(MsgCreateDelegationDecision) returns (MsgCreateDelegationDecisionResponse);
  rpc UpdateDelegationDecision(MsgUpdateDelegationDecision) returns (MsgUpdateDelegationDecisionResponse);
  rpc DeleteDelegationDecision(MsgDeleteDelegationDecision) returns (MsgDeleteDelegationDecisionResponse);
  rpc CreateSelectionPolicy(MsgCreateSelectionPolicy) returns (MsgCreateSelectionPolicyResponse);
  rpc UpdateSelectionPolicy(MsgUpdateSelectionPolicy) returns (MsgUpdateSelectionPolicyResponse);
  rpc DeleteSelectionPolicy(MsgDeleteSelectionPolicy) returns (MsgDeleteSelectionPolicyResponse);
rpc CreateSelectionCriteria(MsgCreateSelectionCriteria) returns (MsgCreateSelectionCriteriaResponse);
  rpc UpdateSelectionCriteria(MsgUpdateSelectionCriteria) returns (MsgUpdateSelectionCriteriaResponse);
  rpc DeleteSelectionCriteria(MsgDeleteSelectionCriteria) returns (MsgDeleteSelectionCriteriaResponse);
  rpc CheckDelegation(MsgCheckDelegation) returns (MsgCheckDelegationResponse);
rpc CreateDelegationRequest(MsgCreateDelegationRequest) returns (MsgCreateDelegationRequestResponse);
  rpc UpdateDelegationRequest(MsgUpdateDelegationRequest) returns (MsgUpdateDelegationRequestResponse);
  rpc DeleteDelegationRequest(MsgDeleteDelegationRequest) returns (MsgDeleteDelegationRequestResponse);
rpc CreateFinalDelegationDecision(MsgCreateFinalDelegationDecision) returns (MsgCreateFinalDelegationDecisionResponse);
  rpc UpdateFinalDelegationDecision(MsgUpdateFinalDelegationDecision) returns (MsgUpdateFinalDelegationDecisionResponse);
  rpc DeleteFinalDelegationDecision(MsgDeleteFinalDelegationDecision) returns (MsgDeleteFinalDelegationDecisionResponse);
rpc CreateDelegationRequestLog(MsgCreateDelegationRequestLog) returns (MsgCreateDelegationRequestLogResponse);
  rpc UpdateDelegationRequestLog(MsgUpdateDelegationRequestLog) returns (MsgUpdateDelegationRequestLogResponse);
  rpc DeleteDelegationRequestLog(MsgDeleteDelegationRequestLog) returns (MsgDeleteDelegationRequestLogResponse);
rpc CreateCalculationTime(MsgCreateCalculationTime) returns (MsgCreateCalculationTimeResponse);
  rpc UpdateCalculationTime(MsgUpdateCalculationTime) returns (MsgUpdateCalculationTimeResponse);
  rpc DeleteCalculationTime(MsgDeleteCalculationTime) returns (MsgDeleteCalculationTimeResponse);
  rpc CalculateRequestDelegationTiming(MsgCalculateRequestDelegationTiming) returns (MsgCalculateRequestDelegationTimingResponse);
  rpc AddDelegationDecision(MsgAddDelegationDecision) returns (MsgAddDelegationDecisionResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgCreateLocalDomain {
  string creator = 1;
  string name = 3;
  string location = 4;
}
message MsgCreateLocalDomainResponse {}

message MsgUpdateLocalDomain {
  string creator = 1;
  string name = 3;
  string location = 4;
}
message MsgUpdateLocalDomainResponse {}

message MsgDeleteLocalDomain {
  string creator = 1;
}
message MsgDeleteLocalDomainResponse {}
message MsgCreateDomain {
  string creator = 1;
  string name = 2;
  string location = 3;
  string ibcChannel = 4;
}

message MsgCreateDomainResponse {
  uint64 id = 1;
}

message MsgUpdateDomain {
  string creator = 1;
  uint64 id = 2;
  string name = 3;
  string location = 4;
  string ibcChannel = 5;
}

message MsgUpdateDomainResponse {}

message MsgDeleteDomain {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteDomainResponse {}

message MsgSendEstablishCooperation {
  string creator = 1;
  string port = 2;
  string channelID = 3;
  uint64 timeoutTimestamp = 4;
}

message MsgSendEstablishCooperationResponse {
}
message MsgCreateForwardPolicy {
  string creator = 1;
  string mode = 3;
  repeated string domainList = 4;
  repeated string locationList = 5;
}
message MsgCreateForwardPolicyResponse {}

message MsgUpdateForwardPolicy {
  string creator = 1;
  string mode = 3;
  repeated string domainList = 4;
  repeated string locationList = 5;
}
message MsgUpdateForwardPolicyResponse {}

message MsgDeleteForwardPolicy {
  string creator = 1;
}
message MsgDeleteForwardPolicyResponse {}
message MsgCreateValidity {
  string creator = 1;
  string notBefore = 2;
  string notAfter = 3;
}

message MsgCreateValidityResponse {
  uint64 id = 1;
}

message MsgUpdateValidity {
  string creator = 1;
  uint64 id = 2;
  string notBefore = 3;
  string notAfter = 4;
}

message MsgUpdateValidityResponse {}

message MsgDeleteValidity {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteValidityResponse {}

message MsgCreateDecisionPolicy {
  string creator = 1;
  repeated string domainList = 3;
  repeated string locationList = 4;
  uint64 cost = 5;
  uint64 maxDelegations = 6;
  Validity validity = 7;
}
message MsgCreateDecisionPolicyResponse {}

message MsgUpdateDecisionPolicy {
  string creator = 1;
  repeated string domainList = 3;
  repeated string locationList = 4;
  uint64 cost = 5;
  uint64 maxDelegations = 6;
  Validity validity = 7;
}
message MsgUpdateDecisionPolicyResponse {}

message MsgDeleteDecisionPolicy {
  string creator = 1;
}
message MsgDeleteDecisionPolicyResponse {}
message MsgCreatePermission {
  string creator = 1;
  string action = 2;
  string resource = 3;
}

message MsgCreatePermissionResponse {
  uint64 id = 1;
}

message MsgUpdatePermission {
  string creator = 1;
  uint64 id = 2;
  string action = 3;
  string resource = 4;
}

message MsgUpdatePermissionResponse {}

message MsgDeletePermission {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeletePermissionResponse {}

message MsgCreateDelegationConditions {
  string creator = 1;
  uint64 cost = 2;
  uint64 maxDelegateeNb = 3;
  Validity validity = 4;
}

message MsgCreateDelegationConditionsResponse {
  uint64 id = 1;
}

message MsgUpdateDelegationConditions {
  string creator = 1;
  uint64 id = 2;
  uint64 cost = 3;
  uint64 maxDelegateeNb = 4;
  Validity validity = 5;
}

message MsgUpdateDelegationConditionsResponse {}

message MsgDeleteDelegationConditions {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteDelegationConditionsResponse {}

message MsgSendRequestDelegation {
  string creator = 1;
  string port = 2;
  uint64 timeoutTimestamp = 4;
  DelegationRequest delegationRequest = 5;
}

message MsgSendRequestDelegationResponse {
}
message MsgConfigureLocalDomain {
  string creator = 1;
}

message MsgConfigureLocalDomainResponse {
}

message MsgCreateDelegationDecision {
  string creator = 1;
  string decision = 2;
  DelegationConditions delegationConditions = 3;
}

message MsgCreateDelegationDecisionResponse {
  uint64 id = 1;
}

message MsgUpdateDelegationDecision {
  string creator = 1;
  uint64 id = 2;
  string decision = 3;
  DelegationConditions delegationConditions = 4;
}

message MsgUpdateDelegationDecisionResponse {}

message MsgDeleteDelegationDecision {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteDelegationDecisionResponse {}

message MsgCreateSelectionPolicy {
  string creator = 1;
  repeated string domainList = 3;
  repeated string delegatorLocationList = 4;
  uint64 cost = 5;
  uint64 nbDelegations = 6;
  Validity validity = 7;
}
message MsgCreateSelectionPolicyResponse {}

message MsgUpdateSelectionPolicy {
  string creator = 1;
  repeated string domainList = 3;
  repeated string delegatorLocationList = 4;
  uint64 cost = 5;
  uint64 nbDelegations = 6;
  Validity validity = 7;
}
message MsgUpdateSelectionPolicyResponse {}

message MsgDeleteSelectionPolicy {
  string creator = 1;
}
message MsgDeleteSelectionPolicyResponse {}
message MsgCreateSelectionCriteria {
  string creator = 1;
  repeated string domainList = 2;
  repeated string delegatorLocationList = 3;
  uint64 cost = 4;
  uint64 nbDelegations = 5;
  Validity validity = 6;
}

message MsgCreateSelectionCriteriaResponse {
  uint64 id = 1;
}

message MsgUpdateSelectionCriteria {
  string creator = 1;
  uint64 id = 2;
  repeated string domainList = 3;
  repeated string delegatorLocationList = 4;
  uint64 cost = 5;
  uint64 nbDelegations = 6;
  Validity validity = 7;
}

message MsgUpdateSelectionCriteriaResponse {}

message MsgDeleteSelectionCriteria {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteSelectionCriteriaResponse {}

message MsgCheckDelegation {
  string creator = 1;
  string label = 2;
  string selectionCriteria = 3;
}

message MsgCheckDelegationResponse {
}

message MsgCreateDelegationRequest {
  string creator = 1;
  string label = 2;
  string delegationAction = 3;
  Permission permission = 4;
}

message MsgCreateDelegationRequestResponse {
  uint64 id = 1;
}

message MsgUpdateDelegationRequest {
  string creator = 1;
  uint64 id = 2;
  string label = 3;
  string delegationAction = 4;
  Permission permission = 5;
}

message MsgUpdateDelegationRequestResponse {}

message MsgDeleteDelegationRequest {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteDelegationRequestResponse {}

message MsgCreateFinalDelegationDecision {
  string creator = 1;
  string delegationRequestLabel = 2;
  string decision = 3;
}

message MsgCreateFinalDelegationDecisionResponse {
  uint64 id = 1;
}

message MsgUpdateFinalDelegationDecision {
  string creator = 1;
  uint64 id = 2;
  string delegationRequestLabel = 3;
  string decision = 4;
}

message MsgUpdateFinalDelegationDecisionResponse {}

message MsgDeleteFinalDelegationDecision {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteFinalDelegationDecisionResponse {}

message MsgCreateDelegationRequestLog {
  string creator = 1;
  string transaction = 2;
  string requestLabel = 3;
  string details = 4;
  string function = 5;
}

message MsgCreateDelegationRequestLogResponse {
  uint64 id = 1;
}

message MsgUpdateDelegationRequestLog {
  string creator = 1;
  uint64 id = 2;
  string transaction = 3;
  string requestLabel = 4;
  string details = 5;
  string function = 6;
}

message MsgUpdateDelegationRequestLogResponse {}

message MsgDeleteDelegationRequestLog {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteDelegationRequestLogResponse {}

message MsgCreateCalculationTime {
  string creator = 1;
  string startTimestamp = 2;
  string endTimestamp = 3;
  uint64 duration = 4;
  string requestLabel = 5;
}

message MsgCreateCalculationTimeResponse {
  uint64 id = 1;
}

message MsgUpdateCalculationTime {
  string creator = 1;
  uint64 id = 2;
  string startTimestamp = 3;
  string endTimestamp = 4;
  uint64 duration = 5;
  string requestLabel = 6;
}

message MsgUpdateCalculationTimeResponse {}

message MsgDeleteCalculationTime {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteCalculationTimeResponse {}

message MsgCalculateRequestDelegationTiming {
  string creator = 1;
  string requestLabel = 2;
}

message MsgCalculateRequestDelegationTimingResponse {
}

message MsgAddDelegationDecision {
  string creator = 1;
  string decision = 2;
  DelegationConditions delegationConditions = 3;
  string decisionDomain = 4;
  string delegationRequestLabel = 5;
}

message MsgAddDelegationDecisionResponse {
}

// this line is used by starport scaffolding # proto/tx/message
